# Generated by Django 5.0.3 on 2024-04-14 19:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("journal", "0002_remove_owner_page_remove_publisher_page_and_more"),
        ("upload", "0002_alter_validationresult_category"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="package",
            name="journal",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="journal.journal",
            ),
        ),
        migrations.AlterField(
            model_name="errorresolution",
            name="action",
            field=models.CharField(
                blank=True,
                choices=[
                    ("to-fix", "I will fix this error"),
                    ("disagree", "This is not an error"),
                ],
                default="to-fix",
                max_length=32,
                null=True,
                verbose_name="Action",
            ),
        ),
        migrations.AlterField(
            model_name="validationresult",
            name="category",
            field=models.CharField(
                choices=[
                    ("unexpected-error", "UNEXPECTED_ERROR"),
                    ("forbidden-update-error", "FORBIDDEN_UPDATE_ERROR"),
                    (
                        "journal-incompatibility-error",
                        "ARTICLE_JOURNAL_INCOMPATIBILITY_ERROR",
                    ),
                    ("article-is-not-new-error", "ARTICLE_IS_NOT_NEW_ERROR"),
                    ("xml-format-error", "XML_FORMAT_ERROR"),
                    ("xml-content-error", "VE_XML_CONTENT_ERROR"),
                    ("group-error", "VE_GROUP_DATA_ERROR"),
                    ("bibliometrics-data-error", "BIBLIOMETRICS_DATA_ERROR"),
                    ("services-data-error", "SERVICES_DATA_ERROR"),
                    ("data-consistency-error", "DATA_CONSISTENCY_ERROR"),
                    ("criteria-issues-error", "CRITERIA_ISSUES"),
                    ("asset-error", "ASSET_ERROR"),
                    ("rendition-error", "RENDITION_ERROR"),
                ],
                max_length=32,
                verbose_name="Error category",
            ),
        ),
        migrations.CreateModel(
            name="ReviewPdf",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "marks",
                    models.BooleanField(
                        default=False, verbose_name="Marks by the editor/author."
                    ),
                ),
                (
                    "bibliographic_caption",
                    models.BooleanField(
                        default=False,
                        verbose_name="Bibliographic caption with journal information such as volume, number, supplement, special issue and year of publication.",
                    ),
                ),
                (
                    "table_of_contents",
                    models.BooleanField(
                        default=False,
                        verbose_name="For regular publication, Table of contents pagination matches the PDF.",
                    ),
                ),
                (
                    "pagination",
                    models.BooleanField(
                        default=False,
                        verbose_name="For AOP, Pagination appears as 1-X (it cannot have sequential pagination).",
                    ),
                ),
                (
                    "elocation",
                    models.BooleanField(
                        default=False,
                        verbose_name="For PC, Contains elocation-id (unique for each document) also optional pagination for 1-X printing (cannot have sequential pagination).",
                    ),
                ),
                (
                    "periodicity",
                    models.BooleanField(
                        default=False,
                        verbose_name="For regular publication, Periodicity information is included.",
                    ),
                ),
                (
                    "doi",
                    models.BooleanField(
                        default=False,
                        verbose_name="For all types of publication, DOI is included in the PDF (mandatory). The DOI number must be unique for each document.",
                    ),
                ),
                (
                    "doi_translation",
                    models.BooleanField(
                        default=False,
                        verbose_name="For all types of publication, When there is a translation if there is a different DOI for translation. If it appears in the PDF, it must be marked in the XML.",
                    ),
                ),
                (
                    "doi_characters",
                    models.BooleanField(
                        default=False,
                        verbose_name='There are no characters that could "break" the DOI registration in CrossRef.',
                    ),
                ),
                (
                    "license",
                    models.BooleanField(
                        default=False,
                        verbose_name="For all types of publication, Creative Commons (CC) license is included in the PDF (required).",
                    ),
                ),
                (
                    "history_dates",
                    models.BooleanField(
                        default=False,
                        verbose_name="For all types of publication, Articles that have undergone peer review must contain at least the complete history dates (day + month + year) of acceptance and approval.",
                    ),
                ),
                (
                    "label_affiliation",
                    models.BooleanField(
                        default=False,
                        verbose_name="For all modalities, Affiliation is correct and has its respective label between author and affiliation (mandatory).",
                    ),
                ),
                (
                    "orcid",
                    models.BooleanField(
                        default=False,
                        verbose_name="For all modalities, There is at least one author with ORCID (any author), if so, check if there is a visible number (In the model: 0000-0000-0000-0000 [allows letter]) or ORCID icon linked to the page from the author's ORCID.",
                    ),
                ),
                (
                    "taxonomy",
                    models.BooleanField(
                        default=False, verbose_name="Exists taxonomy information."
                    ),
                ),
                (
                    "role",
                    models.BooleanField(
                        default=False,
                        verbose_name="If there is an indication of author contributions, the marking in <role> is correct.",
                    ),
                ),
                (
                    "credit",
                    models.BooleanField(
                        default=False,
                        verbose_name="If Taxonomy CRediT, Tag attribute was marked correctly.",
                    ),
                ),
                (
                    "availability",
                    models.BooleanField(
                        default=False,
                        verbose_name="Data availability information has been marked with the correct tags.",
                    ),
                ),
                (
                    "opinion",
                    models.BooleanField(
                        default=False,
                        verbose_name="When an opinion is published, Marking follows guidelines and correct labeling.",
                    ),
                ),
                (
                    "preprint",
                    models.BooleanField(
                        default=False,
                        verbose_name="Preprint information was marked with the correct tags.",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
